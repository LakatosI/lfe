#! /usr/bin/env lfe
;; -*- mode: lfe; -*-
;; Copyright (c) 2008-2014 Robert Virding.
;;
;; Licensed under the Apache License, Version 2.0 (the "License");
;; you may not use this file except in compliance with the License.
;; You may obtain a copy of the License at
;;
;;     http://www.apache.org/licenses/LICENSE-2.0
;;
;; Unless required by applicable law or agreed to in writing, software
;; distributed under the License is distributed on an "AS IS" BASIS,
;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;; See the License for the specific language governing permissions and
;; limitations under the License.

(defun fix-code-path ()
  (let* ((p0 (code:get_path))
	 (p1 (lists:delete "." p0)))
    (code:set_path p1)))

(defun parse-opts
  ([`("-o" ,odir . ,as) opts]
   (parse-opts as (orddict:store 'outdir odir opts)))
  ([`("-pa" ,dir . ,as) opts]
   (code:add_patha dir)
   (parse-opts as opts))
  ([`("-pa" ,dir . ,as) opts]
   (code:add_pathz dir)
   (parse-opts as opts))
  ([`("--" . ,as) opts]
   (tuple as opts))
  ([as opts]
   (tuple as opts)))

(defun usage ()
  (let ((usage (++ "Usage: lfec [options] file ...\n"
		   "Options:\n"
		   "-o name        name of output directory\n"
		   "-pa path       add path to the front of Erlang's code path\n"
		   "-pz path       add path to the end of Erlang's code path\n")))
    (io:put_chars usage)))

(case script-args
  (() (usage))
  (as0
   (fix-code-path)
   (let* ((opts0 (list (tuple 'outdir ".")))
	  ((tuple as1 opts1) (parse-opts as0 opts0)))
     (lists:map (lambda (a) (lfe_comp:file a (list* 'verbose 'report opts1)))
		as1))))
